{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prane\\\\Desktop\\\\capstone-project\\\\capstone-project-main\\\\frontend\\\\src\\\\App.jsx\";\n/*import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function App() {\r\n  const [recipes, setRecipes] = useState([\r\n    {\r\n      name: \"Pasta Arrabiata\",\r\n      time: \"20 mins\",\r\n      ingredients: \"Pasta, Tomato, Garlic, Chili\",\r\n      steps: \"Boil pasta, Cook sauce, Mix and serve\",\r\n      image: \"https://source.unsplash.com/300x200/?pasta\"\r\n    },\r\n    {\r\n      name: \"Paneer Butter Masala\",\r\n      time: \"30 mins\",\r\n      ingredients: \"Paneer, Butter, Tomato, Spices\",\r\n      steps: \"Cook tomato base, Add paneer, Simmer\",\r\n      image: \"https://source.unsplash.com/300x200/?paneer\"\r\n    },\r\n    {\r\n      name: \"Veg Pulao\",\r\n      time: \"25 mins\",\r\n      ingredients: \"Rice, Vegetables, Spices, Ghee\",\r\n      steps: \"Cook veggies, Add rice, Steam and serve\",\r\n      image: \"https://source.unsplash.com/300x200/?pulao\"\r\n    }\r\n  ]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    time: \"\",\r\n    ingredients: \"\",\r\n    steps: \"\",\r\n    image: \"\"\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddOrUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isEditing) {\r\n      const updated = [...recipes];\r\n      updated[editingIndex] = formData;\r\n      setRecipes(updated);\r\n      setIsEditing(false);\r\n      setEditingIndex(null);\r\n    } else {\r\n      setRecipes([...recipes, formData]);\r\n    }\r\n\r\n    setFormData({ name: \"\", time: \"\", ingredients: \"\", steps: \"\", image: \"\" });\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    setFormData(recipes[index]);\r\n    setIsEditing(true);\r\n    setEditingIndex(index);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updated = [...recipes];\r\n    updated.splice(index, 1);\r\n    setRecipes(updated);\r\n  };\r\n\r\n  const filteredRecipes = recipes.filter((recipe) =>\r\n    recipe.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">üçΩÔ∏è Recipe Sharing Platform</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search recipes...\"\r\n        className=\"searchBox\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      <form className=\"recipeForm\" onSubmit={handleAddOrUpdate}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Dish Name\"\r\n          value={formData.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"time\"\r\n          placeholder=\"Preparation Time\"\r\n          value={formData.time}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"ingredients\"\r\n          placeholder=\"Ingredients (comma separated)\"\r\n          value={formData.ingredients}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"steps\"\r\n          placeholder=\"Steps (comma separated)\"\r\n          value={formData.steps}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          placeholder=\"Image URL (optional)\"\r\n          value={formData.image}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\" className=\"btnAdd\">\r\n          {isEditing ? \"Update Recipe\" : \"Add Recipe\"}\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"cardContainer\">\r\n        {filteredRecipes.map((recipe, index) => (\r\n          <div key={index} className=\"card\">\r\n            <img\r\n              src={\r\n                recipe.image || \"https://via.placeholder.com/300x200?text=Recipe\"\r\n              }\r\n              alt={recipe.name}\r\n              className=\"cardImage\"\r\n            />\r\n            <h2>{recipe.name}</h2>\r\n            <p><strong>Prep Time:</strong> {recipe.time}</p>\r\n            <p><strong>Ingredients:</strong></p>\r\n            <ul>\r\n              {recipe.ingredients.split(\",\").map((ing, i) => (\r\n                <li key={i}>{ing.trim()}</li>\r\n              ))}\r\n            </ul>\r\n            <p><strong>Steps:</strong></p>\r\n            <ol>\r\n              {recipe.steps.split(\",\").map((step, i) => (\r\n                <li key={i}>{step.trim()}</li>\r\n              ))}\r\n            </ol>\r\n            <div className=\"cardButtons\">\r\n              <button onClick={() => handleEdit(index)} className=\"editBtn\">Edit</button>\r\n              <button onClick={() => handleDelete(index)} className=\"deleteBtn\">Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\n\nimport RecipeManager from \"./components/RecipeManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RecipeManager, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RecipeManager","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prane/Desktop/capstone-project/capstone-project-main/frontend/src/App.jsx"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function App() {\r\n  const [recipes, setRecipes] = useState([\r\n    {\r\n      name: \"Pasta Arrabiata\",\r\n      time: \"20 mins\",\r\n      ingredients: \"Pasta, Tomato, Garlic, Chili\",\r\n      steps: \"Boil pasta, Cook sauce, Mix and serve\",\r\n      image: \"https://source.unsplash.com/300x200/?pasta\"\r\n    },\r\n    {\r\n      name: \"Paneer Butter Masala\",\r\n      time: \"30 mins\",\r\n      ingredients: \"Paneer, Butter, Tomato, Spices\",\r\n      steps: \"Cook tomato base, Add paneer, Simmer\",\r\n      image: \"https://source.unsplash.com/300x200/?paneer\"\r\n    },\r\n    {\r\n      name: \"Veg Pulao\",\r\n      time: \"25 mins\",\r\n      ingredients: \"Rice, Vegetables, Spices, Ghee\",\r\n      steps: \"Cook veggies, Add rice, Steam and serve\",\r\n      image: \"https://source.unsplash.com/300x200/?pulao\"\r\n    }\r\n  ]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    time: \"\",\r\n    ingredients: \"\",\r\n    steps: \"\",\r\n    image: \"\"\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddOrUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isEditing) {\r\n      const updated = [...recipes];\r\n      updated[editingIndex] = formData;\r\n      setRecipes(updated);\r\n      setIsEditing(false);\r\n      setEditingIndex(null);\r\n    } else {\r\n      setRecipes([...recipes, formData]);\r\n    }\r\n\r\n    setFormData({ name: \"\", time: \"\", ingredients: \"\", steps: \"\", image: \"\" });\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    setFormData(recipes[index]);\r\n    setIsEditing(true);\r\n    setEditingIndex(index);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updated = [...recipes];\r\n    updated.splice(index, 1);\r\n    setRecipes(updated);\r\n  };\r\n\r\n  const filteredRecipes = recipes.filter((recipe) =>\r\n    recipe.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">üçΩÔ∏è Recipe Sharing Platform</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search recipes...\"\r\n        className=\"searchBox\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      <form className=\"recipeForm\" onSubmit={handleAddOrUpdate}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Dish Name\"\r\n          value={formData.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"time\"\r\n          placeholder=\"Preparation Time\"\r\n          value={formData.time}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"ingredients\"\r\n          placeholder=\"Ingredients (comma separated)\"\r\n          value={formData.ingredients}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"steps\"\r\n          placeholder=\"Steps (comma separated)\"\r\n          value={formData.steps}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          placeholder=\"Image URL (optional)\"\r\n          value={formData.image}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\" className=\"btnAdd\">\r\n          {isEditing ? \"Update Recipe\" : \"Add Recipe\"}\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"cardContainer\">\r\n        {filteredRecipes.map((recipe, index) => (\r\n          <div key={index} className=\"card\">\r\n            <img\r\n              src={\r\n                recipe.image || \"https://via.placeholder.com/300x200?text=Recipe\"\r\n              }\r\n              alt={recipe.name}\r\n              className=\"cardImage\"\r\n            />\r\n            <h2>{recipe.name}</h2>\r\n            <p><strong>Prep Time:</strong> {recipe.time}</p>\r\n            <p><strong>Ingredients:</strong></p>\r\n            <ul>\r\n              {recipe.ingredients.split(\",\").map((ing, i) => (\r\n                <li key={i}>{ing.trim()}</li>\r\n              ))}\r\n            </ul>\r\n            <p><strong>Steps:</strong></p>\r\n            <ol>\r\n              {recipe.steps.split(\",\").map((step, i) => (\r\n                <li key={i}>{step.trim()}</li>\r\n              ))}\r\n            </ol>\r\n            <div className=\"cardButtons\">\r\n              <button onClick={() => handleEdit(index)} className=\"editBtn\">Edit</button>\r\n              <button onClick={() => handleDelete(index)} className=\"deleteBtn\">Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nimport RecipeManager from \"./components/RecipeManager\";\r\n\r\nfunction App() {\r\n  return <RecipeManager />;\r\n}\r\n\r\nexport default App;"],"mappingsaAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOD,OAAA,CAACF,aAAa;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1B;AAACC,EAAA,GAFQL,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}